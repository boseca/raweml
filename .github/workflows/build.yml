# This workflow will run test and upload the coverage when push or pull_request is made on `dev` branch
name: build

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Run Test and get coverage
        run: |
          go test -race -covermode atomic -coverprofile=covprofile
          sed -i "s/$(pwd|sed 's/\//\\\//g')/./g" covprofile # convert absolute path to relative path 
        # working-directory: src/github.com/boseca/raweml # add this !!!!!!!!!!!!

      - name: Install goveralls
        if: success()
        run: |
          echo "PWD"
          pwd
          GO111MODULE=on go get github.com/mattn/goveralls@latest
          GO111MODULE=on go get github.com/jandelgado/gcov2lcov@latest


      # add this step for go 1.10 !!!!!!!!!!!!
      - name: Set up GOPATH
        run: |
          echo "BEFORE -----------------"
          pwd
          ls -la 
          echo $GOPATH
          echo $GITHUB_PATH
          echo $GITHUB_ENV
          echo "........................"
          echo "GOPATH=${{ github.workspace }}" 
          echo "${{ github.workspace }}/bin"
          echo "AFTER -----------------"
          pwd
          echo $GOPATH
          echo $GITHUB_PATH
          echo $GITHUB_ENV
          echo "........................"
          
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"
          echo "AFTER 2 -----------------"
          pwd
          echo $GOPATH
          echo $GITHUB_PATH
          echo $GITHUB_ENV
          echo "........................"


      - name: Push test coverage 0
        if: success()
        continue-on-error: true
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "PWD"
          pwd
          mkdir -p coverage
          goveralls -coverprofile=covprofile -service=github
        # working-directory: src/github.com/boseca/raweml # add this !!!!!!!!!!!

      - name: Push test coverage 1 - prep
        if: success()
        continue-on-error: true
        run: |
          echo "PWD"
          pwd
          mkdir -p coverage
          gcov2lcov -infile=covprofile -outfile=./coverage/lcov.info
        # working-directory: src/github.com/boseca/raweml # add this !!!!!!!!!!!

      - name: Push test coverage 1
        if: success()
        continue-on-error: true
        # env:
        #   COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # NOTE:  Default: "./coverage/lcov.info". Local path to the lcov output file produced by your test suite. An error will be thrown if the file can't be found. This is the file that will be sent to the Coveralls API.
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push test coverage 2
        if: success()
        continue-on-error: true
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: covprofile

